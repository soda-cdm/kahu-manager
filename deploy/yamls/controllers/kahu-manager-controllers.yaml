apiVersion: apps/v1
kind: Deployment
metadata:
  name: kahu-manager-service
  namespace: kahu-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kahu-manager-controllers
  template:
    metadata:
      labels:
        app: kahu-manager-controllers
    spec:
      serviceAccountName: kahu-manager
      containers:
        - image: sodacdm/kahu-manager-controller:v1.0.0
          imagePullPolicy: IfNotPresent
          name: kahu-manager
          command: ["/usr/local/bin/controller-manager"]
          #args:   
          #example of adding custom resourceList for backup. resources should be separated by comma
          #- --supportedResources=Deployment,Pod,ReplicaSet
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: kahu-manager
  name: kahu-manager-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kahu-manager-clusterrole
subjects:
  - kind: ServiceAccount
    name: kahu-manager
    namespace: kahu-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: kahu-manager
  name: kahu-manager-clusterrole
rules:
  - apiGroups: ["kahumgr.io"]
    resources: [ "schedulepolicy","backupschedule", "bckupschedule/status"]
    verbs: ["get", "list", "watch", "patch", "update", "delete"]
  - apiGroups: ["kahu.io"]
    resources: ["backups", "backups/status"]
    verbs: ["get", "list", "watch", "patch", "update", "delete"]
  - apiGroups: ["coordination.k8s.io"]
    resourceNames: ["kahu-manager"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kahu-manager
  namespace: kahu-manager
